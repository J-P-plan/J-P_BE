# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
name: CI/CD with AWS

on:
  push:
    branches: [ "main" ]

env:
  S3_BUCKET_NAME: jandp
  AWS_REGION: ap-northeast-2
  CODE_DEPLOY_APPLICATION_NAME: jandp
  CODE_DEPLOY_GROUP_NAME: jandp

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Add permission
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Make zip file
        run: zip -r ./webservice-deploy.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./webservice-deploy.zip s3://$S3_BUCKET_NAME/webservice-deploy.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Create Deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} \
            --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=webservice-deploy.zip