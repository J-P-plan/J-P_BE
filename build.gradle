plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.jp'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // mapper
    implementation 'org.mapstruct:mapstruct:1.5.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'

    implementation 'com.google.code.gson:gson'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'com.google.maps:google-maps-services:0.13.0'

    //swagger 설정
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    //oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

//    //queryDsl
//    // queryDSL 설정
//    // api 'mysql:mysql-connector-java:5.1.49'
//    api 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}
//// Querydsl 설정 시작
//def generated = 'src/main/generated'
//sourceSets {
//    main.java.srcDirs += [generated]
//}
//
//tasks.withType(JavaCompile) {
//    options.getGeneratedSourceOutputDirectory().set(file(generated))
//}
//
//clean.doLast {
//    file(generated).deleteDir()
//}
//// Querydsl 설정 종료

tasks.named('test') {
    useJUnitPlatform()
}
